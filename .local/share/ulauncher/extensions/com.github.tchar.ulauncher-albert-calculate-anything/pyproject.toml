[tool.pytest.ini_options]
filterwarnings = ["error"]
addopts = """--ignore=test/benchmark \
    --ignore=test/query/handlers/babel \
    --allow-hosts=127.0.0.1,127.0.1.1,::1"""

[tool.coverage.run]
command_line = "-m pytest"
branch = false
parallel = true
include = ["./*"]
omit = [
    ".tox/*",
    "demo/*",
    "test/*",
    "main.py",
    "__init__.py",
    "calculate_anything/appdirs.py"
]

[tool.coverage.report]
ignore_errors = false
show_missing = true
include = ["./*"]
omit = [
    ".tox/*",
    "demo/*",
    "test/*",
    "main.py",
    "__init__.py",
    "calculate_anything/appdirs.py"
]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "# pragma: no cover",
    # Ignore pass
    "^\\s*pass\\s*$",
    # Ignore Ellipsis (...)
    "^\\s*\\.\\.\\.\\s*$",
    "^\\s*Ellipsis\\s*$"
]

[tool.coverage.html]
directory = "cover/html/"

[tool.coverage.xml]
output = "cover/xml/coverage.xml"

[tool.flake8]
max-line-length = 80
ignore = [
    "E203",
    "W503"
]

[tool.black]
line-length = 80
skip-string-normalization = true

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
minversion = 3.24.1
recreate = false
envlist = clean,linting,codestyle,py{37,38,39,310,311},babel_py{37,38,39,310,311},coverage,benchmark

[testenv:clean]
deps = -r{toxinidir}/requirements/test-requirements.txt
commands = coverage erase

[testenv:linting]
deps = -r{toxinidir}/requirements/linting-requirements.txt
commands =
    pflake8 {toxinidir} --count --show-source --statistics
    pflake8 {toxinidir} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

[testenv:codestyle]
deps = -r{toxinidir}/requirements/linting-requirements.txt
commands = black --check {toxinidir}/

[testenv:coverage]
commands =
    coverage combine
    coverage report
    coverage html
    coverage xml

[testenv]
platform = linux2?|darwin|win32
deps =
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
commands = coverage run

[testenv:babel_py37]
platform = linux2?|darwin
basepython = python3.7
deps = 
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
    -r{toxinidir}/requirements/optional-requirements.txt
commands = coverage run -m pytest {toxinidir}/test/query/handlers/babel

[testenv:babel_py38]
platform = linux2?|darwin
basepython = python3.8
deps = 
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
    -r{toxinidir}/requirements/optional-requirements.txt
commands = coverage run -m pytest {toxinidir}/test/query/handlers/babel

[testenv:babel_py310]
platform = linux2?|darwin
basepython = python3.10
deps = 
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
    -r{toxinidir}/requirements/optional-requirements.txt
commands = coverage run -m pytest {toxinidir}/test/query/handlers/babel

[testenv:babel_py311]
platform = linux2?|darwin
basepython = python3.11
deps = 
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
    -r{toxinidir}/requirements/optional-requirements.txt
commands = coverage run -m pytest {toxinidir}/test/query/handlers/babel

[testenv:babel_py39]
platform = linux2?|darwin
basepython = python3.9
deps = 
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
    -r{toxinidir}/requirements/optional-requirements.txt
commands = coverage run -m pytest {toxinidir}/test/query/handlers/babel

[testenv:benchmark]
basepython = python3.9
deps =
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/test-requirements.txt
commands = pytest {toxinidir}/test/benchmark/ --benchmark-json benchmark-python3.9.json
"""